import{r as k,_ as S}from"./Radio.0sRdI4vs.js";import{_ as B,G as A,H as r,s as G,K as b,L as u,B as z,r as N,o as l,c as i,a as U,O as y,R as v,d as j,t as w,a0 as F,F as _,N as P,S as R,T as O,P as T,w as L,an as o}from"./entry.Ch0zM-wf.js";import{u as D}from"./useFormGroup.MGXdcWX4.js";import"./uid.KLLbMoZc.js";const E={wrapper:"relative flex items-start",legend:"text-sm font-medium text-gray-700 dark:text-gray-200 mb-1",default:{color:"primary"}},d=A(r.ui.strategy,r.ui.radioGroup,E),H=A(r.ui.strategy,r.ui.radio,k),I=G({components:{URadio:S},inheritAttrs:!1,props:{modelValue:{type:[String,Number,Object],default:""},name:{type:String,default:null},legend:{type:String,default:null},options:{type:Array,default:()=>[]},optionAttribute:{type:String,default:"label"},valueAttribute:{type:String,default:"value"},disabled:{type:Boolean,default:!1},color:{type:String,default:()=>d.default.color,validator(e){return r.ui.colors.includes(e)}},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},uiRadio:{type:Object,default:()=>({})}},emits:["update:modelValue","change"],setup(e,{emit:s}){const{ui:m,attrs:c}=b("radioGroup",u(e,"ui"),d,u(e,"class")),{ui:g}=b("radio",u(e,"uiRadio"),H),{emitFormChange:p,color:n,name:t}=D(e,d);z("radio-group",{color:n,name:t});const f=a=>{s("update:modelValue",a),s("change",a),p()},C=a=>o(a,e.valueAttribute,o(a,e.optionAttribute)),h=a=>o(a,e.optionAttribute,o(a,e.valueAttribute)),V=a=>["string","number","boolean"].includes(typeof a)?{value:a,label:a}:{...a,value:C(a),label:h(a)},$=N(()=>e.options.map(a=>V(a)));return{ui:m,uiRadio:g,attrs:c,normalizedOptions:$,onUpdate:f}}});function K(e,s,m,c,g,p){const n=S;return l(),i("div",{class:y(e.ui.wrapper)},[U("fieldset",R(O(e.attrs)),[e.legend||e.$slots.legend?(l(),i("legend",{key:0,class:y(e.ui.legend)},[v(e.$slots,"legend",{},()=>[j(w(e.legend),1)])],2)):F("",!0),(l(!0),i(_,null,P(e.normalizedOptions,t=>(l(),T(n,{key:t.value,label:t.label,"model-value":e.modelValue,value:t.value,disabled:t.disabled||e.disabled,ui:e.uiRadio,onChange:f=>e.onUpdate(t.value)},{label:L(()=>[v(e.$slots,"label",R(O({option:t})))]),_:2},1032,["label","model-value","value","disabled","ui","onChange"]))),128))],16)],2)}const W=B(I,[["render",K]]);export{W as default};
